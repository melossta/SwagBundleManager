{"version":3,"file":"swag-bundle-manager-BLJuIE0b.js","sources":["../../../app/administration/src/module/swag-bundle/page/swag-bundle-list/swag-bundle-list.html.twig","../../../app/administration/src/module/swag-bundle/page/swag-bundle-list/index.js","../../../app/administration/src/module/swag-bundle/page/swag-bundle-detail/swag-bundle-detail.html.twig","../../../app/administration/src/module/swag-bundle/page/swag-bundle-detail/index.js","../../../app/administration/src/module/swag-bundle/page/swag-bundle-create/index.js","../../../app/administration/src/module/swag-bundle/index.js"],"sourcesContent":["{% block swag_bundle_list %}\n<sw-page class=\"swag-bundle-list\">\n    <template #smart-bar-actions>\n        <sw-button variant=\"primary\" :routerLink=\"{name:'swag.bundle.create'}\">\n            {{ $tc('swag-bundle.list.addButtonText') }}\n        </sw-button>\n    </template>\n    <template #content>\n        {% block swag_bundle_list_content %}\n            <sw-entity-listing\n                    v-if=\"bundles\"\n                    :items=\"bundles\"\n                    :repository=\"repository\"\n                    :showSelection=\"false\"\n                    :columns=\"columns\"\n                    detailRoute=\"swag-bundle.detail\"\n            >\n            </sw-entity-listing>\n        {%endblock %}\n    </template>\n</sw-page>\n{% endblock %}","import template from './swag-bundle-list.html.twig';\n\nconst {Component}= Shopware;\nconst {Criteria}= Shopware.Data;\n\nComponent.register('swag-bundle-list',{\n    template,\n\n    inject:[\n        'repositoryFactory'\n    ],\n    data(){\n        return{\n            repository:null,\n            bundles:null\n        }\n    },\n    metaInfo(){\n        return{\n            title: this.$createTitle()\n        };\n    },\n    computed:{\n        columns(){\n            return this.getColumns();\n        }\n    },\n    created(){\n        this.createdComponent();\n    },\n    methods:{\n        createdComponent(){\n            this.repository=this.repositoryFactory.create('swag_bundle')\n            this.repository.search(new Criteria(),Shopware.Context.api).then((result)=>{\n                this.bundles=result;\n            });\n        },\n        getColumns(){\n            return[\n                {\n                    property:'name',\n                    label:this.$tc('swag-bundle.list.columnName'),\n                    routerLink:'swag.bundle.detail',\n                    inlineEdit:'string',\n                    allowResize:true,\n                    primary:true\n                },\n                {\n                    property: 'discount',\n                    label: this.$tc('swag-bundle.list.columnDiscount'),\n                    inlineEdit:'number',\n                    allowResize: true\n                },\n                {\n                    property: 'discountType',\n                    label: this.$tc('swag-bundle.list.columnDiscountType'),\n                    allowResize: true\n                }\n            ]\n        }\n    }\n})","{% block swag_bundle_detail %}\n    <sw-page class=\"swag-bundle-detail\">\n        <template #smart-bar-actions>\n            <sw-button :routerLink=\"{ name: 'swag.bundle.index' }\">\n                {{ $tc('swag-bundle.detail.cancelButtonText') }}\n            </sw-button>\n            <sw-button-process\n            :isLoading=\"isLoading\"\n            :processSuccess=\"processSuccess\"\n            variant=\"primary\"\n            @process-finish=\"saveFinish\"\n            @click=\"onClickSave\"\n            >\n                {{ $tc('swag-bundle.detail.saveButtonText') }}\n            </sw-button-process>\n        </template>\n        <template #content>\n            <sw-card-view>\n                <sw-card v-if=\"bundle\" :isLoading=\"isLoading\">\n                    <sw-text-field v-model=\"bundle.name\" :is-loading=\"isLoading\" :label=\"$tc('swag-bundle.detail.nameLabel')\"></sw-text-field>\n                    <sw-number-field v-model=\"bundle.discount\" :label=\"$tc('swag-bundle.detail.discountLabel')\"></sw-number-field>\n\n                    <sw-radio-field\n                            :label=\"$tc('swag-bundle.detail.discountTypeLabel')\"\n                            v-model=\"bundle.discountType\"\n                            :options=\"options\"\n                    ></sw-radio-field>\n\n                    <label>{{ $tc('swag-bundle.detail.assignProductsLabel') }}</label>\n                    <select v-model=\"selectedProductIds\" multiple @change=\"onProductChange\">\n                        <option v-for=\"product in products\" :key=\"product.id\" :value=\"product.id\">\n                            {{ product.name }}\n                        </option>\n                    </select>\n\n\n\n                </sw-card>\n            </sw-card-view>\n\n        </template>\n    </sw-page>\n{% endblock %}","import template from './swag-bundle-detail.html.twig';\n\nconst {Component,Mixin}=Shopware;\n\nComponent.register('swag-bundle-detail', {\n    template,\n    inject:[\n        'repositoryFactory'\n    ],\n\n    mixins:[\n        Mixin.getByName('notification')\n    ],\n\n    metaInfo(){\n        return {\n            title: this.getByName('notification'),\n        };\n    },\n\n    data(){\n        return {\n            bundle:null,\n            isLoading:false,\n            processSuccess:false,\n            repository:null,\n            products: [], // holds all products to choose from\n            selectedProductIds: [] // holds selected product IDs\n        }\n    },\n    computed:{\n        options(){\n            return[\n                {value:'absolute',name:this.$tc('swag-bundle.detail.absoluteText')},\n                {value: 'percent',name:this.$tc('swag-bundle.detail.absolutePercent')}\n            ];\n        }\n    },\n\n    created(){\n        this.repository = this.repositoryFactory.create('swag_bundle');\n        this.productRepository = this.repositoryFactory.create('product');\n\n        this.loadProducts();\n        this.createdComponent();\n    },\n\n    methods:{\n        createdComponent() {\n            this.getBundle();\n        },\n        getBundle() {\n            this.repository.get(this.$route.params.id, Shopware.Context.api).then((entity) => {\n                this.bundle = entity;\n\n                // If bundle already has products, store their IDs\n                if (this.bundle.products) {\n                    this.selectedProductIds = this.bundle.products.map(p => p.id);\n                }\n            });\n        },\n        loadProducts() {\n            const Criteria = Shopware.Data.Criteria;\n            const criteria = new Criteria(1, 50);\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n\n            this.productRepository.search(criteria, Shopware.Context.api).then(result => {\n                this.products = result;\n            });\n        },\n        onClickSave() {\n            this.isLoading = true;\n\n            // Attach the selected product IDs to the bundle's products association\n            this.bundle.products = this.selectedProductIds.map(productId => {\n                return {\n                    productId, // key for the mapping table\n                    id: productId // Shopware still needs the ID for reference\n                };\n            });\n\n            console.log('Final bundle payload before save:', JSON.parse(JSON.stringify(this.bundle)));\n\n            this.repository.save(this.bundle, Shopware.Context.api)\n                .then(() => {\n                    this.getBundle();\n                    this.isLoading = false;\n                    this.processSuccess = true;\n                })\n                .catch((exception) => {\n                    this.isLoading = false;\n                    this.createNotificationError({\n                        title: this.$tc('swag-bundle.detail.saveError'),\n                        message: exception\n                    });\n                });\n        }\n,\n        onProductChange() {\n            console.log('Selected product IDs:', this.selectedProductIds);\n\n            // Optional: log product names for debugging\n            const selectedNames = this.products\n                .filter(p => this.selectedProductIds.includes(p.id))\n                .map(p => p.name);\n            console.log('Products added to bundle:', selectedNames);\n        },\n        saveFinish() {\n            this.processSuccess = false;\n        }\n    }\n\n})","const {Component} = Shopware;\n\nComponent.extend('swag-bundle-create','swag-bundle-detail',{\n    methods:{\n        getBundle() {\n            this.bundle = this.repository.create(Shopware.Context.api);\n            this.bundle.discountType = 'absolute'; // or 'percent', whichever you want default\n        },\n\n        onClickSave() {\n            this.isLoading = true;\n\n            // Attach the selected product IDs to the bundle's products association\n            this.bundle.products = this.selectedProductIds.map(productId => {\n                return {\n                    productId, // key for the mapping table\n                    id: productId // Shopware still needs the ID for reference\n                };\n            });\n\n            console.log('Final bundle payload before save:', JSON.parse(JSON.stringify(this.bundle)));\n\n            this.repository.save(this.bundle, Shopware.Context.api)\n                .then(() => {\n                    this.getBundle();\n                    this.isLoading = false;\n                    this.processSuccess = true;\n                })\n                .catch((exception) => {\n                    this.isLoading = false;\n                    this.createNotificationError({\n                        title: this.$tc('swag-bundle.detail.saveError'),\n                        message: exception\n                    });\n                });\n        }\n    }\n});","/*import './page/swag-bundle-index';\nimport enGB from './snippet/en-GB.json';\n\nShopware.Locale.extend('en-GB', enGB);\n\nShopware.Module.register('swag-bundle', {\n    type: 'core',\n    name: 'swag-bundle',\n    title: 'swag-bundle.general.mainMenuItemGeneral',\n    description: 'swag-bundle.general.descriptionTextModule',\n    color: '#ff3d58',\n    icon: 'default-object-bundle', // You can use any icon here\n    routePrefixPath: 'swag.bundle',\n    routes: {\n        index: {\n            component: 'swag-bundle-index',\n            path: 'index'\n        }\n    },\n    navigation: [\n        {\n            id: 'swag-bundle',\n            label: 'swag-bundle.general.mainMenuItemGeneral',\n            color: '#ff3d58',\n            icon: 'regular-shopping-bag',\n            path: 'swag.bundle.index',\n            // ⛔ Removed parent!\n            position: 80,\n            privilege: null\n        }\n    ]\n});\n*/\n// import './page/swag-bundle-index';\n\nimport './page/swag-bundle-list';\nimport './page/swag-bundle-detail'\nimport './page/swag-bundle-create'\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\nconst {Module} = Shopware;\nShopware.Module.register('swag-bundle',\n    {\n     type:'core',\n     name:'bundle',\n     title:'swag-bundle.general.mainMenuItemGeneral',\n     description:'swag-bundle.general.descriptionTextModule',\n     color:'#ff3d58',\n     icon:'regular-shopping-bag',\n    routePrefixPath: 'swag.bundle',\n\n        snippets:{\n            'de-DE':deDE,\n            'en-GB':enGB\n        },\n        routes: {\n            index: {\n                component: 'swag-bundle-list',\n                path: 'index'\n            },\n            detail:{\n                component:'swag-bundle-detail',\n                path:'detail/:id',\n                meta:{\n                    parentPath:'swag.bundle.index'\n                }\n            },\n            create:{\n                component:'swag-bundle-create',\n                path:'create',\n                meta:{\n                    parentPath:'swag.bundle.index'\n                }\n            }\n        },\n        navigation:[{\n         label:'swag-bundle.general.mainMenuItemGeneral',\n            color:'#ff3d58',\n            path:\"swag.bundle.index\",\n            icon:\"regular-shopping-bag\",\n            position:100\n        }]\n    }\n\n\n\n)"],"names":["template$1","Component","Criteria","template","result","Mixin","entity","p","criteria","productId","exception","selectedNames","Module","deDE","enGB"],"mappings":"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"}