const o=`{% block swag_bundle_list %} <sw-page class="swag-bundle-list"> <template #smart-bar-actions> <sw-button variant="primary" :routerLink="{name:'swag.bundle.create'}"> {{ $tc('swag-bundle.list.addButtonText') }} </sw-button> </template> <template #content> {% block swag_bundle_list_content %} <sw-entity-listing v-if="bundles" :items="bundles" :repository="repository" :showSelection="false" :columns="columns" detailRoute="swag-bundle.detail" > </sw-entity-listing> {%endblock %} </template> </sw-page> {% endblock %}`,{Component:n}=Shopware,{Criteria:a}=Shopware.Data;n.register("swag-bundle-list",{template:o,inject:["repositoryFactory"],data(){return{repository:null,bundles:null}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return this.getColumns()}},created(){this.createdComponent()},methods:{createdComponent(){this.repository=this.repositoryFactory.create("swag_bundle"),this.repository.search(new a,Shopware.Context.api).then(e=>{this.bundles=e})},getColumns(){return[{property:"name",label:this.$tc("swag-bundle.list.columnName"),routerLink:"swag.bundle.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"discount",label:this.$tc("swag-bundle.list.columnDiscount"),inlineEdit:"number",allowResize:!0},{property:"discountType",label:this.$tc("swag-bundle.list.columnDiscountType"),allowResize:!0}]}}});const i=`{% block swag_bundle_detail %} <sw-page class="swag-bundle-detail"> <template #smart-bar-actions> <sw-button :routerLink="{ name: 'swag.bundle.index' }"> {{ $tc('swag-bundle.detail.cancelButtonText') }} </sw-button> <sw-button-process :isLoading="isLoading" :processSuccess="processSuccess" variant="primary" @process-finish="saveFinish" @click="onClickSave" > {{ $tc('swag-bundle.detail.saveButtonText') }} </sw-button-process> </template> <template #content> <sw-card-view> <sw-card v-if="bundle" :isLoading="isLoading"> <sw-text-field v-model="bundle.name" :label="$tc('swag-bundle.detail.nameLabel')"></sw-text-field> <sw-number-field v-model="bundle.discount" :label="$tc('swag-bundle.detail.discountLabel')"></sw-number-field> <div> <label v-for="option in options" :key="option.value"> <input type="radio" :value="option.value" v-model="discountTypeLocal" /> {{ option.name }} </label> </div> <div class="assign-products"> <label>{{ $tc('swag-bundle.detail.assignProductsLabel') }}</label> <div style="display:flex; gap: 10px; margin-bottom: 15px;"> <select v-model="selectedProductId"> <option disabled value="">{{ $tc('swag-bundle.detail.searchPlaceholder') }}</option> <option v-for="product in products" :key="product.id" :value="product.id"> {{ product.name }} </option> </select> <sw-button variant="primary" @click="addProductToAssigned"> {{ $tc('swag-bundle.detail.addSelected') }} </sw-button> </div> <ul> <li v-for="product in assignedProducts" :key="product.id" style="margin-bottom: 5px;"> {{ product.name }} <sw-button size="small" variant="danger" @click="removeProductFromAssigned(product.id)"> {{ $tc('swag-bundle.detail.clearSelected') }} </sw-button> </li> </ul> </div> </sw-card> </sw-card-view> </template> </sw-page> {% endblock %}`,{Component:d,Mixin:l}=Shopware;d.register("swag-bundle-detail",{template:i,inject:["repositoryFactory"],mixins:[l.getByName("notification")],data(){return{discountTypeLocal:"absolute",bundle:null,assignedProducts:[],selectedProductId:null,products:[],isLoading:!1,processSuccess:!1,options:[{value:"absolute",name:"Absolute"},{value:"percent",name:"Percent"}]}},computed:{},created(){this.repository=this.repositoryFactory.create("swag_bundle"),this.productRepository=this.repositoryFactory.create("product"),this.loadProducts(),this.createdComponent()},methods:{createdComponent(){this.$route.params.id?this.getBundle():(this.bundle=this.repository.create(Shopware.Context.api),this.discountTypeLocal="absolute")},loadProducts(){const e=Shopware.Data.Criteria,t=new e(1,50);t.addSorting(e.sort("name","ASC")),this.productRepository.search(t,Shopware.Context.api).then(s=>{this.products=s})},getBundle(){const e=Shopware.Data.Criteria,t=new e;t.addAssociation("products"),this.repository.get(this.$route.params.id,Shopware.Context.api,t).then(s=>{this.bundle=s,this.discountTypeLocal=this.bundle.discountType||"absolute",this.bundle.products&&this.bundle.products.length>0?this.assignedProducts=this.bundle.products:this.assignedProducts=[]})},onClickSave(){this.isLoading=!0,this.bundle.discountType=this.discountTypeLocal,this.bundle.products=this.assignedProducts.map(e=>({id:e.id})),this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.getBundle(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("swag-bundle.detail.saveError"),message:e})})},addProductToAssigned(){if(!this.selectedProductId)return;const e=this.products.find(t=>t.id===this.selectedProductId);e&&!this.assignedProducts.some(t=>t.id===e.id)&&(this.assignedProducts.push(e),console.log("Added product:",e.name)),this.selectedProductId=null},removeProductFromAssigned(e){this.assignedProducts=this.assignedProducts.filter(t=>t.id!==e),console.log("Removed product:",e)},saveFinish(){this.processSuccess=!1}}});const{Component:r}=Shopware;r.extend("swag-bundle-create","swag-bundle-detail",{methods:{getBundle(){this.bundle=this.repository.create(Shopware.Context.api)},onClickSave(){this.isLoading=!0,this.bundle.discountType=this.discountTypeLocal,this.bundle.products=this.assignedProducts.map(e=>({id:e.id})),this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.isLoading=!1,this.processSuccess=!0,console.log("Saved discountType:",this.discountTypeLocal)}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("swag-bundle.detail.saveError"),message:e})})}}});const c={"swag-bundle":{general:{mainMenuItemGeneral:"Bundle Manager",descriptionTextModule:"Verwaltung von Produkt-Bundles."},list:{addButtonText:"Bündel hinzufügen",columnName:"Name",columnDiscountType:"Rabattart",columnDiscount:"Rabatt"},detail:{nameLabel:"Name",discountLabel:"Discount",discountTypeLabel:"Discount type",assignProductsLabel:"Assign products",cancelButtonText:"Cancel",saveButtonText:"Save",errorTitle:"Error saving the bundle",absoluteText:"Absolute",percentageText:"Percentage"}}},u={"swag-bundle":{general:{mainMenuItemGeneral:"Bundle Manager",descriptionTextModule:"Management of product bundle."},list:{addButtonText:"Add Bundle",columnName:"Name",columnDiscountType:"Discount Type",columnDiscount:"Discount"},detail:{nameLabel:"Name",discountLabel:"Discount",discountTypeLabel:"Discount type",assignProductsLabel:"Assign products",cancelButtonText:"Cancel",saveButtonText:"Save",errorTitle:"Error saving the bundle",absoluteText:"Absolute",percentageText:"Percentage",addSelected:"Add Selected",clearSelected:"Clear Selected",searchPlaceholder:"Search for products"}}},{Module:p}=Shopware;Shopware.Module.register("swag-bundle",{type:"core",name:"bundle",title:"swag-bundle.general.mainMenuItemGeneral",description:"swag-bundle.general.descriptionTextModule",color:"#ff3d58",icon:"regular-shopping-bag",routePrefixPath:"swag.bundle",snippets:{"de-DE":c,"en-GB":u},routes:{index:{component:"swag-bundle-list",path:"index"},detail:{component:"swag-bundle-detail",path:"detail/:id",meta:{parentPath:"swag.bundle.index"}},create:{component:"swag-bundle-create",path:"create",meta:{parentPath:"swag.bundle.index"}}},navigation:[{label:"swag-bundle.general.mainMenuItemGeneral",color:"#ff3d58",path:"swag.bundle.index",icon:"regular-shopping-bag",position:100}]});
//# sourceMappingURL=swag-bundle-manager-DKtvSyx8.js.map
