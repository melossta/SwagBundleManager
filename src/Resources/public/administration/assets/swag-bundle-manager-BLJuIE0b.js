const n=`{% block swag_bundle_list %} <sw-page class="swag-bundle-list"> <template #smart-bar-actions> <sw-button variant="primary" :routerLink="{name:'swag.bundle.create'}"> {{ $tc('swag-bundle.list.addButtonText') }} </sw-button> </template> <template #content> {% block swag_bundle_list_content %} <sw-entity-listing v-if="bundles" :items="bundles" :repository="repository" :showSelection="false" :columns="columns" detailRoute="swag-bundle.detail" > </sw-entity-listing> {%endblock %} </template> </sw-page> {% endblock %}`,{Component:a}=Shopware,{Criteria:o}=Shopware.Data;a.register("swag-bundle-list",{template:n,inject:["repositoryFactory"],data(){return{repository:null,bundles:null}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return this.getColumns()}},created(){this.createdComponent()},methods:{createdComponent(){this.repository=this.repositoryFactory.create("swag_bundle"),this.repository.search(new o,Shopware.Context.api).then(e=>{this.bundles=e})},getColumns(){return[{property:"name",label:this.$tc("swag-bundle.list.columnName"),routerLink:"swag.bundle.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"discount",label:this.$tc("swag-bundle.list.columnDiscount"),inlineEdit:"number",allowResize:!0},{property:"discountType",label:this.$tc("swag-bundle.list.columnDiscountType"),allowResize:!0}]}}});const i=`{% block swag_bundle_detail %} <sw-page class="swag-bundle-detail"> <template #smart-bar-actions> <sw-button :routerLink="{ name: 'swag.bundle.index' }"> {{ $tc('swag-bundle.detail.cancelButtonText') }} </sw-button> <sw-button-process :isLoading="isLoading" :processSuccess="processSuccess" variant="primary" @process-finish="saveFinish" @click="onClickSave" > {{ $tc('swag-bundle.detail.saveButtonText') }} </sw-button-process> </template> <template #content> <sw-card-view> <sw-card v-if="bundle" :isLoading="isLoading"> <sw-text-field v-model="bundle.name" :is-loading="isLoading" :label="$tc('swag-bundle.detail.nameLabel')"></sw-text-field> <sw-number-field v-model="bundle.discount" :label="$tc('swag-bundle.detail.discountLabel')"></sw-number-field> <sw-radio-field :label="$tc('swag-bundle.detail.discountTypeLabel')" v-model="bundle.discountType" :options="options" ></sw-radio-field> <label>{{ $tc('swag-bundle.detail.assignProductsLabel') }}</label> <select v-model="selectedProductIds" multiple @change="onProductChange"> <option v-for="product in products" :key="product.id" :value="product.id"> {{ product.name }} </option> </select> </sw-card> </sw-card-view> </template> </sw-page> {% endblock %}`,{Component:l,Mixin:r}=Shopware;l.register("swag-bundle-detail",{template:i,inject:["repositoryFactory"],mixins:[r.getByName("notification")],metaInfo(){return{title:this.getByName("notification")}},data(){return{bundle:null,isLoading:!1,processSuccess:!1,repository:null,products:[],selectedProductIds:[]}},computed:{options(){return[{value:"absolute",name:this.$tc("swag-bundle.detail.absoluteText")},{value:"percent",name:this.$tc("swag-bundle.detail.absolutePercent")}]}},created(){this.repository=this.repositoryFactory.create("swag_bundle"),this.productRepository=this.repositoryFactory.create("product"),this.loadProducts(),this.createdComponent()},methods:{createdComponent(){this.getBundle()},getBundle(){this.repository.get(this.$route.params.id,Shopware.Context.api).then(e=>{this.bundle=e,this.bundle.products&&(this.selectedProductIds=this.bundle.products.map(t=>t.id))})},loadProducts(){const e=Shopware.Data.Criteria,t=new e(1,50);t.addSorting(e.sort("name","ASC")),this.productRepository.search(t,Shopware.Context.api).then(s=>{this.products=s})},onClickSave(){this.isLoading=!0,this.bundle.products=this.selectedProductIds.map(e=>({productId:e,id:e})),console.log("Final bundle payload before save:",JSON.parse(JSON.stringify(this.bundle))),this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.getBundle(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("swag-bundle.detail.saveError"),message:e})})},onProductChange(){console.log("Selected product IDs:",this.selectedProductIds);const e=this.products.filter(t=>this.selectedProductIds.includes(t.id)).map(t=>t.name);console.log("Products added to bundle:",e)},saveFinish(){this.processSuccess=!1}}});const{Component:d}=Shopware;d.extend("swag-bundle-create","swag-bundle-detail",{methods:{getBundle(){this.bundle=this.repository.create(Shopware.Context.api),this.bundle.discountType="absolute"},onClickSave(){this.isLoading=!0,this.bundle.products=this.selectedProductIds.map(e=>({productId:e,id:e})),console.log("Final bundle payload before save:",JSON.parse(JSON.stringify(this.bundle))),this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.getBundle(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("swag-bundle.detail.saveError"),message:e})})}}});const u={"swag-bundle":{general:{mainMenuItemGeneral:"Bundle Manager",descriptionTextModule:"Verwaltung von Produkt-Bundles."},list:{addButtonText:"Bündel hinzufügen",columnName:"Name",columnDiscountType:"Rabattart",columnDiscount:"Rabatt"},detail:{nameLabel:"Name",discountLabel:"Discount",discountTypeLabel:"Discount type",assignProductsLabel:"Assign products",cancelButtonText:"Cancel",saveButtonText:"Save",errorTitle:"Error saving the bundle",absoluteText:"Absolute",percentageText:"Percentage"}}},c={"swag-bundle":{general:{mainMenuItemGeneral:"Bundle Manager",descriptionTextModule:"Management of product bundle."},list:{addButtonText:"Add Bundle",columnName:"Name",columnDiscountType:"Discount Type",columnDiscount:"Discount"},detail:{nameLabel:"Name",discountLabel:"Discount",discountTypeLabel:"Discount type",assignProductsLabel:"Assign products",cancelButtonText:"Cancel",saveButtonText:"Save",errorTitle:"Error saving the bundle",absoluteText:"Absolute",percentageText:"Percentage",addSelected:"Add Selected",clearSelected:"Clear Selected",searchPlaceholder:"Search for products"}}},{Module:p}=Shopware;Shopware.Module.register("swag-bundle",{type:"core",name:"bundle",title:"swag-bundle.general.mainMenuItemGeneral",description:"swag-bundle.general.descriptionTextModule",color:"#ff3d58",icon:"regular-shopping-bag",routePrefixPath:"swag.bundle",snippets:{"de-DE":u,"en-GB":c},routes:{index:{component:"swag-bundle-list",path:"index"},detail:{component:"swag-bundle-detail",path:"detail/:id",meta:{parentPath:"swag.bundle.index"}},create:{component:"swag-bundle-create",path:"create",meta:{parentPath:"swag.bundle.index"}}},navigation:[{label:"swag-bundle.general.mainMenuItemGeneral",color:"#ff3d58",path:"swag.bundle.index",icon:"regular-shopping-bag",position:100}]});
//# sourceMappingURL=swag-bundle-manager-BLJuIE0b.js.map
